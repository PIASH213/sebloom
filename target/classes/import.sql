-- -- REMEMBER (10)
-- INSERT INTO question (topic, bloom_level, question_text, option_a, option_b, option_c, option_d, correct_answer) VALUES
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'What is the main goal of Software Engineering?', 'A. Building houses', 'B. Developing reliable software', 'C. Cooking food', 'D. Playing games', 'B'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'Which one is a software process model?', 'A. Waterfall', 'B. Snake model', 'C. Ladder model', 'D. Rope model', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'Which document contains user requirements?', 'A. SRS', 'B. ERD', 'C. PCB', 'D. BOM', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'What does SRS stand for?', 'A. Software Requirement Specification', 'B. Software Review Specification', 'C. System Ready Sheet', 'D. Standard Requirement System', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'Which of these is not a software metric?', 'A. LOC', 'B. Cyclomatic Complexity', 'C. Test Coverage', 'D. Electric Resistance', 'D'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'What is debugging?', 'A. Finding and fixing bugs', 'B. Adding bugs', 'C. Writing documentation', 'D. Building UI', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'Which model is considered a linear approach?', 'A. Agile', 'B. Waterfall', 'C. Spiral', 'D. Incremental', 'B'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'What is coupling in software?', 'A. Strength of connection between modules', 'B. Number of modules', 'C. Amount of testing', 'D. Execution speed', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'What is cohesion in software?', 'A. Degree to which a module performs one task', 'B. Amount of coupling', 'C. Testing depth', 'D. Software size', 'A'),
--                                                                                                                      ('Software Engineering', 'REMEMBER', 'Who is called the father of Software Engineering?', 'A. Alan Turing', 'B. Barry Boehm', 'C. James Gosling', 'D. Tim Berners-Lee', 'B'),
--
-- -- UNDERSTAND (10)
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Explain why Agile is flexible.', 'A. Fixed phases', 'B. Iterative and adaptive', 'C. No requirements', 'D. It is cheap', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'What is the main difference between Waterfall and Agile?', 'A. Waterfall is iterative, Agile is sequential', 'B. Waterfall is sequential, Agile is iterative', 'C. Both are iterative', 'D. Both are sequential', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Why is modularity important in software?', 'A. Reduces complexity', 'B. Increases coupling', 'C. Reduces cohesion', 'D. Slows development', 'A'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Explain use of version control.', 'A. Keeps food fresh', 'B. Tracks code changes', 'C. Speeds hardware', 'D. Compiles programs', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Why is software testing needed?', 'A. To increase bugs', 'B. To verify and validate software', 'C. To avoid documentation', 'D. To shorten requirements', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Explain black-box testing.', 'A. Testing internal logic', 'B. Testing external behavior', 'C. Debugging code', 'D. Measuring performance', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'What is the purpose of a feasibility study?', 'A. Code compilation', 'B. Evaluate viability', 'C. Draw diagrams', 'D. Training staff', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Explain why requirement gathering is critical.', 'A. It delays development', 'B. It defines what to build', 'C. It reduces cost always', 'D. It ensures zero bugs', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'Why is UML used in software engineering?', 'A. Hardware design', 'B. Visualize software design', 'C. Food recipes', 'D. Gaming', 'B'),
--                                                                                                                      ('Software Engineering', 'UNDERSTAND', 'What is the importance of software maintenance?', 'A. No need after delivery', 'B. To fix and enhance software', 'C. To delete software', 'D. To redesign hardware', 'B'),
--
-- -- APPLY (10)
--                                                                                                                      ('Software Engineering', 'APPLY', 'Build a simple login page. Which SDLC phase is this?', 'A. Design', 'B. Implementation', 'C. Testing', 'D. Maintenance', 'B'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Use UML to draw a class diagram for a library system.', 'A. Modeling', 'B. Testing', 'C. Debugging', 'D. Deployment', 'A'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Apply black-box testing on a calculator app.', 'A. White-box approach', 'B. Interface testing', 'C. Memory testing', 'D. Hardware testing', 'B'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Develop a prototype for an e-commerce checkout page.', 'A. Maintenance', 'B. Prototyping', 'C. Testing', 'D. Documentation', 'B'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Create test cases for a student registration form.', 'A. Coding', 'B. Testing', 'C. Maintenance', 'D. Deployment', 'B'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Choose a version control system for a team project.', 'A. Git', 'B. UML', 'C. Word', 'D. Paint', 'A'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Implement a feature to export reports to PDF.', 'A. Design', 'B. Coding', 'C. Testing', 'D. Planning', 'B'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Use cohesion and coupling principles to refactor a module.', 'A. Refactoring', 'B. Documentation', 'C. Debugging', 'D. Testing', 'A'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Design a database schema for a hospital management system.', 'A. Modeling', 'B. Deployment', 'C. Testing', 'D. Training', 'A'),
--                                                                                                                      ('Software Engineering', 'APPLY', 'Implement a CI/CD pipeline.', 'A. Operations', 'B. Deployment automation', 'C. Hardware testing', 'D. Prototyping', 'B'),
--
-- -- ANALYZE (10)
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Compare Agile and Waterfall risk handling.', 'A. Both same', 'B. Agile handles risk early', 'C. Waterfall handles risk early', 'D. None', 'B'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Analyze why software projects fail often.', 'A. Clear requirements', 'B. Poor communication and planning', 'C. High testing', 'D. Good management', 'B'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Identify bottlenecks in a payment gateway application.', 'A. Debugging', 'B. Performance analysis', 'C. Hardware replacement', 'D. Database deletion', 'B'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Compare black-box and white-box testing.', 'A. Both check internal logic', 'B. One internal, one external', 'C. Both external', 'D. Both internal', 'B'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Analyze coupling impact on maintainability.', 'A. High coupling increases maintenance cost', 'B. High coupling reduces cost', 'C. Coupling has no effect', 'D. Cohesion is same as coupling', 'A'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Evaluate code readability using metrics.', 'A. Cyclomatic complexity', 'B. LOC', 'C. Test coverage', 'D. All', 'D'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Analyze feasibility of migrating to microservices.', 'A. Same as monolith', 'B. Consider cost, risk, scalability', 'C. Ignore requirements', 'D. No difference', 'B'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Break down system into modules.', 'A. Modularity', 'B. Debugging', 'C. Maintenance', 'D. Testing', 'A'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Examine defect trend reports.', 'A. Identify root cause', 'B. Delete reports', 'C. Add bugs', 'D. None', 'A'),
--                                                                                                                      ('Software Engineering', 'ANALYZE', 'Analyze user feedback to improve UI.', 'A. Coding', 'B. Feedback analysis', 'C. Debugging', 'D. Deployment', 'B'),
--
-- -- EVALUATE (10)
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Judge if Agile is better for startups.', 'A. Yes', 'B. No', 'C. Maybe', 'D. Equal', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Evaluate risk of using legacy systems.', 'A. High risk', 'B. Low risk', 'C. No risk', 'D. Equal risk', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Decide whether to adopt cloud or on-premise.', 'A. Cloud always', 'B. On-premise always', 'C. Depends on requirements', 'D. No difference', 'C'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Judge the correctness of a software design pattern.', 'A. Correct', 'B. Wrong', 'C. May be correct', 'D. Not sure', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Prioritize software features.', 'A. Based on user value', 'B. Random', 'C. Based on color', 'D. Based on developer mood', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Evaluate vendor proposals.', 'A. Compare cost and features', 'B. Choose randomly', 'C. Reject all', 'D. Accept first', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Decide quality of test coverage.', 'A. >80% good', 'B. <50% good', 'C. No tests good', 'D. 0% best', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Judge if microservices improve scalability.', 'A. Yes', 'B. No', 'C. Maybe', 'D. Same', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Evaluate user satisfaction survey.', 'A. Measure improvements', 'B. Ignore feedback', 'C. Delete surveys', 'D. None', 'A'),
--                                                                                                                      ('Software Engineering', 'EVALUATE', 'Decide project readiness for release.', 'A. Ready if passes QA', 'B. Ready without testing', 'C. Always ready', 'D. Never ready', 'A'),
--
-- -- CREATE (10)
--                                                                                                                      ('Software Engineering', 'CREATE', 'Design a new algorithm for bug detection.', 'A. Create', 'B. Analyze', 'C. Debug', 'D. Maintain', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Develop a chatbot for requirement gathering.', 'A. Implementation', 'B. Maintenance', 'C. Creation', 'D. Debugging', 'C'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Create a software estimation model.', 'A. Apply existing model', 'B. Develop new model', 'C. Delete old model', 'D. Skip estimation', 'B'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Develop an automated deployment system.', 'A. Creation', 'B. Testing', 'C. Debugging', 'D. None', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Write a new design document for ERP.', 'A. Design', 'B. Testing', 'C. Maintenance', 'D. Debugging', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Propose a new SDLC model for AI-based projects.', 'A. Create', 'B. Analyze', 'C. Debug', 'D. Test', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Build a performance monitoring dashboard.', 'A. Maintenance', 'B. Testing', 'C. Create', 'D. Debugging', 'C'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Create a training program for new developers.', 'A. Creation', 'B. Analyze', 'C. Debug', 'D. Test', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Design a secure authentication system.', 'A. Creation', 'B. Maintenance', 'C. Debugging', 'D. Testing', 'A'),
--                                                                                                                      ('Software Engineering', 'CREATE', 'Propose a hybrid software development methodology.', 'A. Create', 'B. Apply', 'C. Debug', 'D. Test', 'A');